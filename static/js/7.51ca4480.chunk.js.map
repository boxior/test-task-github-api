{"version":3,"sources":["components/presentations/Repos/index.module.scss","components/presentations/Repos/index.js","components/containers/Repos/index.js","components/pages/Repos/index.js"],"names":["module","exports","columns","title","dataIndex","key","sorter","a","b","sortString","defaultSortOrder","sortNumber","UserRepos","repos","isLoading","error","dataSource","Object","values","data","map","repo","id","className","styles","page","loading","active","table","aStr","bStr","localeCompare","ReposContainer","params","useParams","useState","setRepos","useEffect","handleGetRepos","login","Repos","apiGetRepos","prev","axios","get","then","res","catch","ReposPage"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,uB,0HCI/CC,EAAU,CACZ,CACIC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUC,EAAW,CAACF,IAAGC,IAAGH,IAAK,UACzCK,iBAAkB,UAEtB,CACIP,MAAO,cACPC,UAAW,cACXC,IAAK,cACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUC,EAAW,CAACF,IAAGC,IAAGH,IAAK,kBAE7C,CACIF,MAAO,MACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUC,EAAW,CAACF,IAAGC,IAAGH,IAAK,eAE7C,CACIF,MAAO,cACPC,UAAW,cACXC,IAAK,cACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUG,EAAW,CAACJ,IAAGC,IAAGH,IAAK,kBAE7C,CACIF,MAAO,iBACPC,UAAW,iBACXC,IAAK,iBACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUG,EAAW,CAACJ,IAAGC,IAAGH,IAAK,sBA0BlCO,EAhBG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAChB,IAAKA,EAAMC,WAAeD,EAAME,MAC5B,OAAO,kBAAC,IAAD,MAGX,IAAMC,EAAaC,OAAOC,OAAOL,EAAMM,MAAMC,KAAI,SAAAC,GAAI,sBAASA,EAAT,CAAehB,IAAKgB,EAAKC,QAE9E,OACI,yBAAKC,UAAWC,IAAOC,MACnB,kBAAC,IAAD,CAAUC,QAASb,EAAMC,UAAWa,QAAM,GACtC,kBAAC,IAAD,CAAOzB,QAASA,EAASc,WAAYA,EAAYO,UAAWC,IAAOI,WAmB7EnB,EAAa,SAAC,GAAiB,IAAhBF,EAAe,EAAfA,EAAGC,EAAY,EAAZA,EAAGH,EAAS,EAATA,IACjBwB,EAAyB,kBAAXtB,EAAEF,GAAoBE,EAAEF,GAAO,GAC7CyB,EAAyB,kBAAXtB,EAAEH,GAAoBG,EAAEH,GAAO,GAEnD,OAAOwB,EAAKE,cAAcD,IAUxBnB,EAAa,SAAC,GAAiB,IAAhBJ,EAAe,EAAfA,EAAGC,EAAY,EAAZA,EAAGH,EAAS,EAATA,IAIvB,OAH+B,kBAAXE,EAAEF,GAAoBE,EAAEF,GAAO,IACpB,kBAAXG,EAAEH,GAAoBG,EAAEH,GAAO,I,yBC9CxC2B,EArBQ,WACnB,IAAMC,EAASC,cADU,EAYCC,mBALL,CACjBhB,KAAM,GACNL,WAAW,EACXC,MAAO,OAVc,mBAYlBF,EAZkB,KAYXuB,EAZW,KAkBzB,OAJAC,qBAAU,WACNC,EAAe,CAACC,MAAON,EAAOM,MAAOH,eACtC,CAACH,EAAOM,QAEJ,kBAACC,EAAD,CAAO3B,MAAOA,KAUnByB,EAAiB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOH,EAAc,EAAdA,SACvBG,GAGLE,EAAY,CAACF,QAAOH,cAQlBK,EAAc,SAAC,GAAuB,IAAtBF,EAAqB,EAArBA,MAAOH,EAAc,EAAdA,SACzBA,GAAS,SAAAM,GAAI,sBAASA,EAAT,CAAe5B,WAAW,EAAMC,MAAO,UACpD4B,IAIKC,IAJL,uCAIyCL,EAJzC,wBAKKM,MAAK,SAAAC,GAEF,OADAV,GAAS,SAAAM,GAAI,sBAASA,EAAT,CAAe5B,WAAW,EAAOC,MAAO,KAAMI,KAAK,eAAKuB,EAAKvB,KAAX,GAAoB2B,EAAI3B,WAChF2B,KAEVC,OAAM,SAAAhC,GAEH,MADAqB,GAAS,SAAAM,GAAI,sBAASA,EAAT,CAAe5B,WAAW,EAAOC,aACxCA,MCrEHiC,UAJG,WACd,OAAO,kBAAC,EAAD","file":"static/js/7.51ca4480.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Repos_page__KwJ-W\",\"table\":\"Repos_table__1J4HW\"};","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styles from \"./index.module.scss\";\nimport {Empty, Skeleton, Table} from \"antd\";\n\nconst columns = [\n    {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        sorter: (a, b) => sortString({a, b, key: \"name\"}),\n        defaultSortOrder: \"ascend\",\n    },\n    {\n        title: \"Description\",\n        dataIndex: \"description\",\n        key: \"description\",\n        sorter: (a, b) => sortString({a, b, key: \"description\"}),\n    },\n    {\n        title: \"Url\",\n        dataIndex: \"html_url\",\n        key: \"html_url\",\n        sorter: (a, b) => sortString({a, b, key: \"html_url\"}),\n    },\n    {\n        title: \"Forks count\",\n        dataIndex: \"forks_count\",\n        key: \"forks_count\",\n        sorter: (a, b) => sortNumber({a, b, key: \"forks_count\"}),\n    },\n    {\n        title: \"Watchers count\",\n        dataIndex: \"watchers_count\",\n        key: \"watchers_count\",\n        sorter: (a, b) => sortNumber({a, b, key: \"watchers_count\"}),\n    },\n];\n\n/**\n *\n * @param {IRepoState} repos\n * @return {*}\n * @constructor\n */\nconst UserRepos = ({repos}) => {\n    if (!repos.isLoading && !!repos.error) {\n        return <Empty />;\n    }\n\n    const dataSource = Object.values(repos.data).map(repo => ({...repo, key: repo.id}));\n\n    return (\n        <div className={styles.page}>\n            <Skeleton loading={repos.isLoading} active>\n                <Table columns={columns} dataSource={dataSource} className={styles.table} />\n            </Skeleton>\n        </div>\n    );\n};\n\nexport default UserRepos;\n\nUserRepos.propTypes = {\n    repos: PropTypes.object,\n};\n\n/**\n * Handle string sort\n * @param {object} a\n * @param {object} b\n * @param {string} key\n * @return {number}\n */\nconst sortString = ({a, b, key}) => {\n    const aStr = typeof a[key] === \"string\" ? a[key] : \"\";\n    const bStr = typeof b[key] === \"string\" ? b[key] : \"\";\n\n    return aStr.localeCompare(bStr);\n};\n\n/**\n * Handle number sort\n * @param {object} a\n * @param {object} b\n * @param {string} key\n * @return {number}\n */\nconst sortNumber = ({a, b, key}) => {\n    const aNum = typeof a[key] === \"number\" ? a[key] : 0;\n    const bNum = typeof b[key] === \"number\" ? b[key] : 0;\n\n    return aNum - bNum;\n};\n","import React, {useEffect, useState} from \"react\";\nimport Repos from \"../../presentations/Repos\";\nimport axios from \"axios\";\nimport {useParams} from \"react-router-dom\";\n\n/**\n * @typedef IRepo\n * @property {number} id\n * @property {?string} name\n * @property {?string} description\n * @property {?string} url\n * @property {?number} forks_count\n * @property {?number} watchers_count\n */\n\n/**\n *\n * @typedef IRepoState\n * @property {{[number]: IRepo}} data\n * @property {boolean} isLoading\n * @property {?object} error\n */\n\nconst ReposContainer = () => {\n    const params = useParams();\n\n    /**\n     *\n     * @type {IRepoState}\n     */\n    const initialRepos = {\n        data: {},\n        isLoading: false,\n        error: null,\n    };\n    const [repos, setRepos] = useState(initialRepos);\n\n    useEffect(() => {\n        handleGetRepos({login: params.login, setRepos});\n    }, [params.login]);\n\n    return <Repos repos={repos} />;\n};\n\nexport default ReposContainer;\n\n/**\n * Handle get user repos\n * @param {IUser.login} login\n * @param {function} setRepos\n */\nconst handleGetRepos = ({login, setRepos}) => {\n    if (!login) {\n        return;\n    }\n    apiGetRepos({login, setRepos});\n};\n\n/**\n * Fetch user repos\n * @param {IUser.login} login\n * @param {function} setRepos\n */\nconst apiGetRepos = ({login, setRepos}) => {\n    setRepos(prev => ({...prev, isLoading: true, error: null}));\n    axios\n        /**\n         *  Retrieve 100 not private repositories. 100 is a max number per page. Realization without pagination on server side.\n         */\n        .get(`https://api.github.com/users/${login}/repos?per_page=100`)\n        .then(res => {\n            setRepos(prev => ({...prev, isLoading: false, error: null, data: {...prev.data, ...res.data}}));\n            return res;\n        })\n        .catch(error => {\n            setRepos(prev => ({...prev, isLoading: false, error}));\n            throw error;\n        });\n};\n","import React from \"react\";\nimport ReposContainer from \"../../containers/Repos\";\n\nconst ReposPage = () => {\n    return <ReposContainer />;\n};\n\nexport default ReposPage;\n"],"sourceRoot":""}