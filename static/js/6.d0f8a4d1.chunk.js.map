{"version":3,"sources":["components/presentations/Search/index.module.scss","components/presentations/Search/UserCard/index.module.scss","components/presentations/Search/UserCard/Description/index.module.scss","components/presentations/Search/UserCard/Description/index.js","components/presentations/Search/UserCard/index.js","components/presentations/Search/index.js","components/containers/Search/index.js","components/pages/Search/index.js"],"names":["module","exports","UserCardDescription","user","data","company","email","followers","updated_at","login","Item","className","styles","title","value","moment","format","to","Meta","Card","UserCard","isLoading","error","wrap","_","isEmpty","loading","active","avatar","src","avatar_url","name","description","Search","onSearchDebounce","classNames","page","wrapInput","placeholder","onChange","e","currentTarget","SearchContainer","initialStateUser","useState","setUser","onSearchUser","handleSearchUser","searchValue","debounce","apiGetUser","prev","axios","get","then","res","catch","SearchPage"],"mappings":"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","file":"static/js/6.d0f8a4d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Search_page__2gXp0\",\"wrap\":\"Search_wrap___e4vl\",\"wrapInput\":\"Search_wrapInput__10WPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"UserCard_wrap__2eE3G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Description_title__2gu4v\",\"value\":\"Description_value__3a2yc\"};","import PropTypes from \"prop-types\";\nimport {List} from \"antd\";\nimport styles from \"./index.module.scss\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n/**\n *\n * @param {{data: IUser}} user\n * @return {*}\n * @constructor\n */\nconst UserCardDescription = ({user}) => {\n    const {company, email, followers, updated_at, login} = user.data;\n    return (\n        <List>\n            <List.Item>\n                <span className={styles.title}>Company: </span>\n                <span className={styles.value}>{company}</span>\n            </List.Item>\n            <List.Item>\n                {\" \"}\n                <span className={styles.title}>Email: </span>\n                <span className={styles.value}>{email}</span>\n            </List.Item>\n            <List.Item>\n                {\" \"}\n                <span className={styles.title}>Followers: </span>\n                <span className={styles.value}>{followers}</span>\n            </List.Item>\n            <List.Item>\n                {\" \"}\n                <span className={styles.title}>Updated at: </span>\n                <span className={styles.value}>{moment(updated_at).format(\"LLL\")}</span>\n            </List.Item>\n            <List.Item>\n                <Link to={`/search/${login}/repos`}>Repos</Link>\n            </List.Item>\n        </List>\n    );\n};\n\nexport default UserCardDescription;\n\nUserCardDescription.propTypes = {\n    user: PropTypes.object,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styles from \"./index.module.scss\";\nimport {Skeleton, Card, Avatar, Empty} from \"antd\";\nimport UserCardDescription from \"./Description\";\nimport _ from \"lodash\";\n\nconst {Meta} = Card;\n\n/**\n *\n * @param {IUserState} user\n * @return {*}\n * @constructor\n */\nconst UserCard = ({user}) => {\n    const {data, isLoading, error} = user;\n\n    if (!isLoading && !!error) {\n        return (\n            <div className={styles.wrap}>\n                <Empty />\n            </div>\n        );\n    }\n\n    if (!isLoading && _.isEmpty(user.data)) {\n        return null;\n    }\n\n    return (\n        <div className={styles.wrap}>\n            <Card>\n                <Skeleton loading={isLoading} active>\n                    <Meta\n                        avatar={<Avatar src={data.avatar_url} />}\n                        title={data.name}\n                        description={<UserCardDescription user={user} />}\n                    />\n                </Skeleton>\n            </Card>\n        </div>\n    );\n};\n\nexport default UserCard;\n\nUserCard.propTypes = {\n    user: PropTypes.object,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styles from \"./index.module.scss\";\nimport {Input} from \"antd\";\nimport classNames from \"classnames\";\nimport UserCard from \"./UserCard\";\n\n/**\n *\n * @param {function} onSearchDebounce\n * @param {IUserState} user\n * @return {*}\n * @constructor\n */\nconst Search = ({onSearchDebounce, user}) => {\n    const onChange = e => {\n        onSearchDebounce(e.currentTarget.value);\n    };\n\n    return (\n        <div className={classNames(styles.page, styles.wrap)}>\n            <div className={styles.wrapInput}>\n                <Input placeholder={\"Github login...\"} onChange={onChange} />\n            </div>\n            <UserCard user={user} />\n        </div>\n    );\n};\n\nexport default Search;\n\nSearch.propTypes = {\n    onSearchDebounce: PropTypes.func,\n    user: PropTypes.object,\n};\n","import React, {useState} from \"react\";\nimport Search from \"../../presentations/Search\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\n/**\n * @typedef IUser\n * @property {number} id\n * @property {?string} name\n * @property {string} login\n * @property {?string} company\n * @property {?string} email\n * @property {?number} followers\n * @property {string} updated_at\n * @property {?string} avatar_url\n */\n\n/**\n * @typedef IUserState\n * @property {IUser | {}} data\n * @property {boolean} isLoading\n * @property {?object} error\n\n */\n\nconst SearchContainer = () => {\n    /**\n     *\n     * @type {IUserState}\n     */\n    const initialStateUser = {\n        data: {},\n        isLoading: false,\n        error: null,\n    };\n    const [user, setUser] = useState(initialStateUser);\n\n    const onSearchUser = value => {\n        setUser(initialStateUser);\n        handleSearchUser({setUser, initialStateUser, searchValue: value});\n    };\n    const onSearchDebounce = _.debounce(onSearchUser, 1000);\n\n    return <Search onSearchDebounce={onSearchDebounce} onSearchUser={onSearchUser} user={user} />;\n};\n\nexport default SearchContainer;\n\n/**\n *\n * @param {function} setUser\n * @param {IUserState} initialStateUser\n * @param {string} searchValue\n */\nconst handleSearchUser = ({setUser, initialStateUser, searchValue}) => {\n    if (!searchValue) {\n        setUser(initialStateUser);\n        return;\n    }\n\n    apiGetUser({searchValue, setUser});\n};\n\n/**\n *\n * @param {string} searchValue\n * @param {function} setUser\n */\nconst apiGetUser = ({searchValue, setUser}) => {\n    setUser(prev => ({...prev, isLoading: true, error: null}));\n    axios\n        .get(`https://api.github.com/users/${searchValue}`)\n        .then(res => {\n            setUser(prev => ({...prev, isLoading: false, error: null, data: {...prev.data, ...res.data}}));\n            return res;\n        })\n        .catch(error => {\n            setUser(prev => ({...prev, isLoading: false, error}));\n            throw error;\n        });\n};\n","import React from \"react\";\nimport SearchContainer from \"../../containers/Search\";\n\nconst SearchPage = () => {\n    return <SearchContainer />;\n};\n\nexport default SearchPage;\n"],"sourceRoot":""}